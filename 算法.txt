1. 回溯法  
  a. 相较于穷举法，它们都是对所有可能情况的遍历，但回溯是更有规律的尝试，所以尝试次数小于穷举
  b. 相较于贪心算法，它们都是根据当前的“处境”来选择下一步，但是贪心算法做最优的选择，
     回溯做随机（或者顺 序）选择，而回溯可以在不满足条件的前提下选择退一步，重新选择。
  c. 相较于动态规划，它们都从某种角度上，保留了中间结果，避免重复计算（或尝试）。
     但动态规划是一个从局部最优找全局最优的过程，回溯则是把所有符合条件的可能都找出来

2. 银行家算法
   银行家算法（Banker's Algorithm）是一个避免死锁（Deadlock）的著名算法，
   是由艾兹格·迪杰斯特拉在1965年为T.H.E系统设计的一种避免死锁产生的算法

3. 常用的三级缓存主要有LruCache、DiskLruCache、网络，其中LruCache对应内存缓存、DiskLruCache对应持久化缓存。
   Lru表示最近最少使用，意思是当缓存到达限制时候，优先淘汰近期内最少使用的缓存，LruCache和DisLruCache都是如此

4. raft协议

5.  Mersenne Twister算法译为马特赛特旋转演算法，是伪随机数发生器之一，其主要作用是生成伪随机数。此算法是Makoto Matsumoto （松本）和Takuji Nishimura （西村）
    于1997年开发的，基于有限二进制字段上的矩阵线性再生。可以快速产生高质量的伪随机数，修正了古老随机数产生算法的很多缺陷。
    Mersenne Twister这个名字来自周期长度通常取Mersenne质数这样一个事实。常见的有两个变种Mersenne Twister MT19937和Mersenne Twister MT19937-64
    #include "mt19937-64.h"

6  基数估算算法  (目前有LogLog HyperLogLog MinCount)

7  MurmurHash算法由Austin Appleby发明于2008年

8  大神Thomas Wang认为，一个好的哈希函数必须具备以下两点特性：
    1、一个好的哈希函数应该是可逆的。即，对于哈希函数输入值x和输出值y，如果存在f(x) = y，就一定存在g(y) = x。说白了，就是哈希函数可以将某一个值x转换成一个key，也可以把这个key还原回成x。
    2、一个好的哈希函数应该容易造成雪崩效应。这里的雪崩效应是从比特位的角度出发的，它指的是，输入值1bit位的变化会造成输出值1/2的bit位发生变化
    
    /* Thomas Wang's32 bit Mix Function */
    unsigned intdictIntHashFunction(unsigned int key)
    {
        key += ~(key << 15);
        key ^= (key >> 10);
        key += (key << 3);
        key ^= (key >> 6);
        key += ~(key << 11);
        key ^= (key >> 16);
        return key;
    }
    