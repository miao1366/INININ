1.  uname   列出系统信息， 可以 --help
2.  cat  /../  | awk '{print $4}' | awk -F"."'{print $1"."$2}'
3.  cat >./eof.txt <<-EOF 
[ubuntu] 
nameserver 114.114.114.114
EOF

4. EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF.
EOF一般会配合cat能够多行文本输出.
其用法如下:
<<EOF        //开始
....
EOF            //结束
还可以自定义，比如自定义：
<<BBB        //开始
....
BBB              //结束
通过cat配合重定向能够生成文件并追加操作,在它之前先熟悉几个特殊符号:
< :输入重定向
> :输出重定向
>> :输出重定向,进行追加,不会覆盖之前内容
<< :标准输入来自命令行的一对分隔号的中间内容.

5 IFS
    Linux下有一个特殊的环境变量叫做IFS，叫做内部字段分隔符（internal field separator）

6  tee命令主要被用来向standout(标准输出流，通常是命令执行窗口）输出的同时也将内容输出到文件

7 wait命令介绍
   wait [作业指示或进程号]
   1.等待作业号或者进程号制定的进程退出，返回最后一个作业或进程的退出状态状态。
     如果没有制定参数，则等待所有子进程的退出，其退出状态为0.
8. time 
   可以统计程序运行时间

9. seq 
     -w, --equal-width 在列前添加0 使得宽度相同

10.  id命令可以显示真实有效的用户ID(UID)和组ID(GID)

11. useradd   添加用户

12.  passwd  命令用来更改使用者的密码

13. -f   是否是文件

14.  date +%F
      2020-09-06

15   ssh 后面可以添加命令语句

16 ll /proc/$$/fd     $$ 当前进程

17  source命令即点(.)命令

18  系统调用exec是以新的进程去代替原来的进程，但进程的PID保持不变。
      因此，可以这样认为，exec系统调用并没有创建新的进程，只是替换了原来进程上下文的内容。
      原进程的代码段，数据段，堆栈段被新的进程所代替

19  mkfifo [ -m Mode ] File …          管道文件
      mkfifo 命令创建由 File 参数指定的 FIFO 特别文件

20 read  
    -u [ n ] 读取一位数的文件描述符号码 n 作为输入。文件描述符可以用 ksh exec 内置命令打开。
    n 的缺省值是 0，表示的是键盘。值 2 表示标准错误

21 shell expect spawn   exp_continue               
    远程交互命令

22 ［interact］ 
　　执行完成后保持交互状态，把控制权交给控制台，这个时候就可以手工操作了。
       如果没有这一句登录完成后会退出，而不是留在远程终端上.

23 expect eof        结束交互

24  ssh-copy-id 将本机的公钥复制到远程机器的authorized_keys文件中，
      ssh-copy-id也能让你有到远程机器的home, ~./ssh , 和 ~/.ssh/authorized_keys的权利
	  
25 declare 命令用于声明 shell 变量 declare --help

26  echo  -n   不换行

27  grep  "break"

28  head命令输出文件开头部分，默认情况下显示文件的头10行

29  sed 'd'  'i'

30 sed       参数
   -p        打印
   -s        查找
   -d        删除
   /  /      正则匹配
   !         非
   ~         可以组成奇数行/偶数行  具体的可以查查资料  

31 vim   
   r 参数   读入其他文件  

32 sed -r 's/(.)(.)(.*)/\1YYY\2\3/' passwd  // 在passwd文件每行的第一个字母后面添加YYY
   sed -r 's/(.*)(.)/\1YYY\2/' passwd       // 在passwd文件每行的倒数第二个字母后面添加YYY  

   
































































