1. 
    前天面了腾讯后台开发日常实习二面，一道算法题分享给大家~
    有一个字符串，它包括‘&’、‘=’和小写字母，要求将‘=’左边右边的字符串进行匹配，以‘&’为分隔符，将匹配结果放入一个map中。
    要求兼容&&&（多个分隔符），===（多个等号），=a=b=c（一个字段内出现多个不连续等号）等异常。
    例如 ：&abd=cd&cda===baad&dc=wq，将abd匹配cd，cda匹配baad，dc匹配wq。
    例如 ：&ag=cd=sv&&da=&dc&&&&dav=dwq&，将dav匹配dwq。
    附上我自己写的代码~欢迎相互学习和交流~
    https://blog.csdn.net/zxxkkkk/article/details/109547393

2. 

昨天下午5点面完的，时长40多分钟，分享c++面经一份供后续c++小伙伴参考。

1.项目介绍？介绍下项目中最有难点的一个业务实现？项目中用到了nginx与redis，所以被问到nginx负载算法有哪些？nginx如何做短链接的负载均衡？
  （这个问题我不是很懂，因为我项目是基于tcp的聊天服务器，我就回答的是和长链接负载均衡的方式差不多？），redis缓存穿透和雪崩？redis如何做分布式集群？
   redis支持的数据结构有哪些？为什么用redisMQ，还了解哪些消息队列？
   
   比较常见的消息队列产品主要有ActiveMQ、RabbitMQ、ZeroMQ、Kafka、RocketMQ等


2.tcp与udp区别？udp如何保证可靠传输？osi七层模型说下？应用层发出一个http请求后，数据依次往下层传输的封装过程？
https://www.cnblogs.com/fundebug/p/differences-of-tcp-and-udp.html
udp没有三次握手、 四次分手
四、TCP和UDP的比较
1. 对比
                         UDP	                                               TCP
是否连接	    无连接	                                            面向连接
是否可靠	    不可靠传输，不使用流量控制和拥塞控制	                 可靠传输，使用流量控制和拥塞控制
连接对象个数	支持一对一，一对多，多对一和多对多交互通信	               只能是一对一通信
传输方式	   面向报文	                                            面向字节流
首部开销	   首部开销小，仅8字节	                                  首部最小20字节，最大60字节
适用场景	   适用于实时应用（IP电话、视频会议、直播等）	              适用于要求可靠传输的应用，例如文件传输



3.什么是TCP粘包？怎么解决这个问题

3.http与https区别？https怎么保证数据传输的安全性？ca机构可以伪造吗？https的加密方式？

HTTPS和HTTP的主要区别
    HTTP: 超文本传输协议HTTP
    HTTPS: 安全套接字层超文本传输协议
        1、https协议需要到CA申请证书，一般免费证书较少，因而需要一定费用。
        2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl/tls加密传输协议。
        3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。
        4、http的连接很简单，是无状态的；HTTPS协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。



4.map与unordered_map的底层实现？哈希冲突怎么解决？
5口述冒泡、快排？快排时间复杂度分析？快排最好情况与最坏情况分析？快排与归并排序的区别？归并排序的时间复杂度分析？
6.口述算法：单链表是否有环的判断？（问的很细基本要说出代码的整个流程）
7.对腾讯云以及云计算的了解？（卒）
8.还有一个智力题，具体想不起来了，反正不会就完事儿 🤣
8.数据库事务？acid具体解释下？

还有一些问题想不起来了，反正c++基本没问，项目、网络、数据结构问的很多 😃

3.

作者：牛客700591762号
链接：https://www.nowcoder.com/discuss/560011?channel=1009&source_id=home_feed
来源：牛客网

问的比较基础
70min
操作系统：
进程 线程的区别与联系 进程线程共享的资源
程序运行的虚拟内存划分
临界区
锁（普通锁和读写锁的区别）
new开辟的位置

C++：
智能指针（区别，作用）
面向对象的含义
STL
new和malloc

数据库：
数据库的基本操作
引擎
B树和B+树的区别

B树是一种平衡的多路查找树
定义：一棵m 阶的B树，或者为空树，或为满足下列特性的m 叉树：
1 树中每个结点至多有m 棵子树；
2 若根结点不是叶子结点，则至少有两棵子树；
3 除根结点之外的所有非终端结点至少有⌈m/2⌉棵子树；
4 所有的非终端结点中包含以下信息数据：
（n，A0，K1，A1，K2，A2，…，Kn，An）
其中：Ki（i=1,…,n）为关键字，且Ki<Ki+1
Ai (i=0，…，n)为指向子树根结点的指针，且指针Ai−1 所指子树中所有结点的关键字均小于Ki (i=1,…,n)，
An 所指子树中所有结点的关键字均大于Kn.
n( ⌈m/2⌉−1⩽n⩽m−1)为关键字的个数(或者n+1为子树的个数)。
5 所有的叶子结点都出现在同一层次上，并且不带信息（可以看作是外部结点或查找失败的结点，实际上这些结点不存在，指向这些结点的指针为空）。
结点最大的孩子数目称为B树的阶(order)。



为什么范围查找效率高
事务四种隔离级别（脏读，不可重复读 ，幻读）
事务的特征

数据结构：（问的比较细）
顺序表的两种实现在内存上的区别
链表的删除
二叉树：红黑树，平衡二叉树（问的比较细，时间复杂度，特征）
各种树成为链表的情况
链表的时间复杂度

计算机网络：
三次握手
HTTP和HTTPS
滑动窗口
TCP如何实现可靠传输
io复用（select和epoll的区别）


是否对人工智能和云计算有涉猎
手撕代码：
链表合并（简单）节点和链表数据结构+合并
实现map（只写了增删和下标运算符重载），在面试官提醒下放弃红黑树采用哈希表进行实现，用的链表的数据结构

效率很高，当晚通知二面

二面*11.7
时间：两小时
手撕：输入123456输出十二万三千四百五十六（大疆笔试题）
socket的阻塞和非阻塞
select和epoll的区别
epoll的水平触发和边缘触发
虚函数和纯虚函数的区别
虚函数底层实现
智能指针
内存泄漏查看工具
B树和B+树的区别和应用场景
mysql的引擎（全部都问）
ssl的过程
三次握手四次挥手
udp报文最大发送大小

    65507
    为什么最大是65507?
    UDP允许传输的最大长度理论上2^16 - udp head - iphead（ 65507 字节 = 65535 - 20 - 8）
    因为udp包头有2个byte用于记录包体长度. 2个byte可表示最大值为: 2^16-1=64K-1=65535
    udp包头占8字节, ip包头占20字节, 65535-28 = 65507


nagle算法
    a. Nagle就提出了一种通过减少需要通过网络发送包的数量来提高TCP/IP传输的效率，这就是Nagle算法
    b. Nagle算法主要是避免发送小的数据包，要求TCP连接上最多只能有一个未被确认的小分组，在该分组的确认到达之前不能发送其他的小分组

    禁用Nagle 算法
    刚才说过的“大文件数据“应禁用Nagley访坛换言之，如果有必要，就应禁用Nagle算法； 。"Nagle算法使用与否在网络流量上差别不大，使用Nagle算法的传输速度更慢"
    禁用方法非常简单。从下列代码也可看出，只需将套接字可选项TCP_NODELAY: 改为1 (真）即可。

4. 一面
英文介绍，问答
项目（25min）
内存对齐，结构体大小，类大小，虚函数实现原理，static等(8min)
反问（8min）
二面
项目（20min）
比赛，校园活动（10min）
反问
三面
offer情况
个人基本情况
反问
总体来说，面试体验极好，都很专业，流程体制很棒，培养方案及其完善，考核方案一流。
如果不是给我随机分配了一个不是太喜欢的岗位，我就去了，就去了，就去了，哎，好可惜

5.字节 后端实习 40min（已挂）

运行时多态与编译时多态

泛型编程

重载，复写，隐藏的区别

编译过程及指令执行过程

动态编译和静态编译的区别


6.作者：大GGGG
链接：https://www.nowcoder.com/discuss/560492?channel=1009&source_id=home_feed
来源：牛客网

九月末面的 一二三面基本隔几天 流程比较快
回馈一下牛客 国庆之前面的了

一面 45min
手写多线程 两个线程循环打印奇偶数
List Set Map集合讲讲
ArrayList和LinkedList区别
线程池参数
如何保证set集合唯一性 重写hashCode equals方法
java类加载 双亲委派模型 类加载五个步骤
垃圾回收判断算法 引用技术 根可达算法
jvm垃圾回收算法
G1回收器讲讲
网络OSI模型和TCP/IP模型 分层 每一层有什么协议 dns处于那一层(应用层）
讲讲tcp三次握手 四次挥手 为什么要三次握手(防止已经失效的报文达到服务端
B数和B+数区别
数据库事务ACID
select poll epoll()区别(为什么老是问我这个？？？
零拷贝技术
负载均衡算法有哪些
hash一致性算法 hash环
分布式相关有了解吗

二面
手写LRU
讲讲hashMap
volatile关键字作用以及场景
mysql主键索引讲讲 索引失效讲讲
多线程状态转换
String c = "xx" + "yy " + a + "zz" + "mm" + b 背后的优化执行过程
Integer i1 = new Integer(40);
Integer i2 = new Integer(40);
Integer i3 = new Integer(0);
i1 + i3 == i2 的结果和处理过程是怎样的
java8中HashMap的实现有哪些变化
try catch finally中各种return场景
表：
f1    |   f2  |
----------------
NULL  |    1
1     |    NULL
select count(f1) from test;
select count(distinct f1, f2) from test; 区别？
user表中有主键，为自增ID
select * from user表中有主键，为自增ID
select * from user order by name limit N offset M 会查询多少行记录？如何优化，不通过增加索引。user order by name limit N offset M 会查询多少行记录？如何优化，不通过增加索引。
如果服务器上出现了大量处于CLOSE_WAIT状态的TCP链接有可能是什么原因

三面
自我介绍
讲讲hashMap
数据库 覆盖索引
数据库相关 那条sql执行高效
设计大量消息推送
7个球 其中一个比较轻 怎么选出最轻的的那个 最少次数
版本更新问题
团队交流问题
还有一些场景题


7.
作者：牛客111031364号
链接：https://www.nowcoder.com/discuss/560030
来源：牛客网

投的比较晚，没有笔试，捞起来直接面试的。
自我介绍

内存模型
在C语言中，内存可分用五个部分：可参考c-内存模型图

1. BSS段（Block Started by Symbol): 用来存放程序中未初始化的全局变量的内存区域。
2. 数据段（data segment): 用来存放程序中已初始化的全局变量的内存区域。
3. 代码段（text segment): 用来存放程序执行代码的内存区域。
4. 堆（heap）：用来存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。当进程调用malloc分配内存时，
   新分配的内存就被动态添加到堆上，当进程调用free释放内存时，会从堆中剔除。
5. 栈（stack）：存放程序中的局部变量（但不包括static声明的变量，static变量放在数据段中）。同时，在函数被调用时，栈用来传递参数和返回值。
   由于栈先进先出特点。所以栈特别方便用来保存/恢复调用现场。


栈溢出
栈是有一定大小的，通常情况下，栈只有2M，不同系统栈的大小可能不同。
那么，什么情况下才会发生栈溢出呢？
最常见的就是递归。每次递归就相当于调用一个函数，函数每次被调用时都会将局部数据（在函数内部定义的变量、参数、数组、对象等）放入栈中。
递归1000次，就会将1000份这样的数据放入栈中。这些数据占用的内存直到整个递归结束才会被释放，在递归过程中只会累加，不会释放。
如果递归次数过多，并且局部数据也多，那么会使用大量的栈内存，很容易就导致栈溢出了。
在函数内部定义超大数组也会导致栈溢出，例如定义一个 1024 * 1024 的 int 类型的二维数组，就需要 4M 的内存
总结
栈容易溢出是因为栈内存有限，一般就几兆


缓冲区溢出
由于C/C++语言没有数组越界检查机制，当向局部数组缓冲区里写入的数据超过为其分配的大小时，就会发生缓冲区溢出


堆溢出，如何解决




在linux中，堆区的内存申请，在32位系统中，理论上：2^32=4G，但如上面的内存分布图可知：内核占用1G空间。
如上所知，理论上，使用malloc最大能够申请空间大约3G。但这是理论值，因为实际中，还会包含代码区，全局变量区和栈区
X64 CPU 已经限制了虚拟地址中可用的比特数为 48 位，此内核虚拟地址范围总计为 256 TB, Windows 做出了进一步的限制，将其削减为 44 位。
因而，能够存储这类数据结构的虚拟地址跨度被限制为 2^44 ，换言之，当前 64 位 Windows 的系统（内核）虚拟地址空间被限制为 8TB


多态如何实现的

线程通信有几种
互斥锁    条件变量   信号量   


同步通信、     异步通信



进程通信有几种
常见的通信方式有以下几种：
管道pipe
有名管道FIFO
消息队列MessageQueue
共享内存
信号量Semaphore pv操作  (生产者， 消费者)；
信号Signal
套接字Socket


了解过哪些锁
手撕代码：递归实现数字逆序
冒泡排序
冒泡排序优化内循环
冒泡排序优化外循环
算法思想：天平⚖️称重，最优方案
数字推理
前面回答的还行，代码优化部分写的不好，直接凉了


======================================================================================
2020-11-10-
作者：五彩青蛙鱼
链接：https://www.nowcoder.com/discuss/561619?channel=1009&source_id=home_feed
来源：牛客网

3.tcp断开连接的步骤 面试官说说的太大 每一步都应有明确的步骤 比如第一次客户端向服务端发送请求想要说的是“数据已经发送完了” 我说的是客户端发送一个SYN=1 ACK=1的想要断开连接的请求
结合已有总结如下：
首先客户端发送一个连接释放报文，FIN=1（我的数据发送完了）
返回一个确认报文，tcp连接处于半关闭状态，B能向A发送数据但A不能向B发送数据
不再需要连接时，发送连接释放报文，FIN=1
A收到后发送确认，进入TIME_WAIT状态，等待2msl释放连接
B收到A确认后释放报文

4.手撕1. 二叉树层序遍历未判空 运行时报空指针异常 通过0

5.手撕2. 利用快排思想寻找第K大 AC 面试官在此处引导很多 如何优化 无非是省时间或空间 通过比较减少交换次数 最终引导出根据K可剪枝一些不必要的排序（递归过程）

6.滑动窗口何时变化 我回答的是接收端来不及接收时会变小 防止分组丢失 面试官文还有其他什么情况？


作者：betterpig
链接：https://www.nowcoder.com/discuss/561306?channel=1009&source_id=home_feed
来源：牛客网

1. 为什么服务器程序要用主线程做io，这样不是限制了主线程完成其他就绪事件的速度吗
2. Mutable和volatile关键字（没答上来...）
3. 虚函数及其实现
4. Map  multi_map  unordered_map的区别
5. 红黑树和AVL树的区别，为什么不用AVL树
6. 给定一个无序数组，要求打乱它们的顺序，使得每个元素在每个位置的概率相等-->洗牌算法


作者：betterpig
链接：https://www.nowcoder.com/discuss/561303?channel=1009&source_id=home_feed
来源：牛客网

Const关键字的用法

什么时候会有内存泄漏
智能指针
虚表
右值引用
哈希冲突的解决方法，具体说一下怎么实现
红黑树和平衡二叉树有什么区别
如何构造无向连通图的最小生成树（不会）
堆排序有了解吗
归并排序的时间复杂度
无向连通图的广度优先搜索是怎么做的
进程间的通讯方式有哪些
Tcp连接的建立
介绍项目中的分包和解包（项目中没用到）
逻辑题：某年有 53个星期三，下一个元旦可能是星期几
我答的是除了星期三的其他星期几都有可能，后面推了一下应该是星期四，星期五（366天）。
16. 场景题：一个文件有很多行，每一行都是字符串，其中有一些重复的行，怎么剔除这些行
17. 编程实现：写一下shared_ptr这个类的实现，其中该有的数据成员和函数成员，如构造函数、拷贝构造函数、析构函数等
18. 编程实现：最小堆建堆的过程（那时候没有去巩固，写错了）
一面有些问题不会，就挂了。问的算是比较广，对于那时的我来说也有难度。