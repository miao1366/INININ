1. 
    前天面了腾讯后台开发日常实习二面，一道算法题分享给大家~
    有一个字符串，它包括‘&’、‘=’和小写字母，要求将‘=’左边右边的字符串进行匹配，以‘&’为分隔符，将匹配结果放入一个map中。
    要求兼容&&&（多个分隔符），===（多个等号），=a=b=c（一个字段内出现多个不连续等号）等异常。
    例如 ：&abd=cd&cda===baad&dc=wq，将abd匹配cd，cda匹配baad，dc匹配wq。
    例如 ：&ag=cd=sv&&da=&dc&&&&dav=dwq&，将dav匹配dwq。
    附上我自己写的代码~欢迎相互学习和交流~
    https://blog.csdn.net/zxxkkkk/article/details/109547393

2. 

昨天下午5点面完的，时长40多分钟，分享c++面经一份供后续c++小伙伴参考。

1.项目介绍？介绍下项目中最有难点的一个业务实现？项目中用到了nginx与redis，所以被问到nginx负载算法有哪些？nginx如何做短链接的负载均衡？
  （这个问题我不是很懂，因为我项目是基于tcp的聊天服务器，我就回答的是和长链接负载均衡的方式差不多？），redis缓存穿透和雪崩？redis如何做分布式集群？
   redis支持的数据结构有哪些？为什么用redisMQ，还了解哪些消息队列？
   
   比较常见的消息队列产品主要有ActiveMQ、RabbitMQ、ZeroMQ、Kafka、RocketMQ等


2.tcp与udp区别？udp如何保证可靠传输？osi七层模型说下？应用层发出一个http请求后，数据依次往下层传输的封装过程？
https://www.cnblogs.com/fundebug/p/differences-of-tcp-and-udp.html
udp没有三次握手、 四次分手
四、TCP和UDP的比较
1. 对比
                         UDP	                                               TCP
是否连接	    无连接	                                            面向连接
是否可靠	    不可靠传输，不使用流量控制和拥塞控制	                 可靠传输，使用流量控制和拥塞控制
连接对象个数	支持一对一，一对多，多对一和多对多交互通信	               只能是一对一通信
传输方式	   面向报文	                                            面向字节流
首部开销	   首部开销小，仅8字节	                                  首部最小20字节，最大60字节
适用场景	   适用于实时应用（IP电话、视频会议、直播等）	              适用于要求可靠传输的应用，例如文件传输



3.什么是TCP粘包？怎么解决这个问题

3.http与https区别？https怎么保证数据传输的安全性？ca机构可以伪造吗？https的加密方式？

HTTPS和HTTP的主要区别
    HTTP: 超文本传输协议HTTP
    HTTPS: 安全套接字层超文本传输协议
        1、https协议需要到CA申请证书，一般免费证书较少，因而需要一定费用。
        2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl/tls加密传输协议。
        3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。
        4、http的连接很简单，是无状态的；HTTPS协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。



4.map与unordered_map的底层实现？哈希冲突怎么解决？
5口述冒泡、快排？快排时间复杂度分析？快排最好情况与最坏情况分析？快排与归并排序的区别？归并排序的时间复杂度分析？
6.口述算法：单链表是否有环的判断？（问的很细基本要说出代码的整个流程）
7.对腾讯云以及云计算的了解？（卒）
8.还有一个智力题，具体想不起来了，反正不会就完事儿 🤣
8.数据库事务？acid具体解释下？

还有一些问题想不起来了，反正c++基本没问，项目、网络、数据结构问的很多 😃

3.

作者：牛客700591762号
链接：https://www.nowcoder.com/discuss/560011?channel=1009&source_id=home_feed
来源：牛客网

问的比较基础
70min
操作系统：
进程 线程的区别与联系 进程线程共享的资源
程序运行的虚拟内存划分
临界区
锁（普通锁和读写锁的区别）
new开辟的位置

C++：
智能指针（区别，作用）
面向对象的含义
STL
new和malloc

数据库：
数据库的基本操作
引擎
B树和B+树的区别

B树是一种平衡的多路查找树
定义：一棵m 阶的B树，或者为空树，或为满足下列特性的m 叉树：
1 树中每个结点至多有m 棵子树；
2 若根结点不是叶子结点，则至少有两棵子树；
3 除根结点之外的所有非终端结点至少有⌈m/2⌉棵子树；
4 所有的非终端结点中包含以下信息数据：
（n，A0，K1，A1，K2，A2，…，Kn，An）
其中：Ki（i=1,…,n）为关键字，且Ki<Ki+1
Ai (i=0，…，n)为指向子树根结点的指针，且指针Ai−1 所指子树中所有结点的关键字均小于Ki (i=1,…,n)，
An 所指子树中所有结点的关键字均大于Kn.
n( ⌈m/2⌉−1⩽n⩽m−1)为关键字的个数(或者n+1为子树的个数)。
5 所有的叶子结点都出现在同一层次上，并且不带信息（可以看作是外部结点或查找失败的结点，实际上这些结点不存在，指向这些结点的指针为空）。
结点最大的孩子数目称为B树的阶(order)。



为什么范围查找效率高
事务四种隔离级别（脏读，不可重复读 ，幻读）
事务的特征

数据结构：（问的比较细）
顺序表的两种实现在内存上的区别
链表的删除
二叉树：红黑树，平衡二叉树（问的比较细，时间复杂度，特征）
各种树成为链表的情况
链表的时间复杂度

计算机网络：
三次握手
HTTP和HTTPS
滑动窗口
TCP如何实现可靠传输
io复用（select和epoll的区别）


是否对人工智能和云计算有涉猎
手撕代码：
链表合并（简单）节点和链表数据结构+合并
实现map（只写了增删和下标运算符重载），在面试官提醒下放弃红黑树采用哈希表进行实现，用的链表的数据结构

效率很高，当晚通知二面

二面*11.7
时间：两小时
手撕：输入123456输出十二万三千四百五十六（大疆笔试题）
socket的阻塞和非阻塞
select和epoll的区别
epoll的水平触发和边缘触发
虚函数和纯虚函数的区别
虚函数底层实现
智能指针
内存泄漏查看工具
B树和B+树的区别和应用场景
mysql的引擎（全部都问）
ssl的过程
三次握手四次挥手
udp报文最大发送大小

    65507
    为什么最大是65507?
    UDP允许传输的最大长度理论上2^16 - udp head - iphead（ 65507 字节 = 65535 - 20 - 8）
    因为udp包头有2个byte用于记录包体长度. 2个byte可表示最大值为: 2^16-1=64K-1=65535
    udp包头占8字节, ip包头占20字节, 65535-28 = 65507


nagle算法
    a. Nagle就提出了一种通过减少需要通过网络发送包的数量来提高TCP/IP传输的效率，这就是Nagle算法
    b. Nagle算法主要是避免发送小的数据包，要求TCP连接上最多只能有一个未被确认的小分组，在该分组的确认到达之前不能发送其他的小分组

    禁用Nagle 算法
    刚才说过的“大文件数据“应禁用Nagley访坛换言之，如果有必要，就应禁用Nagle算法； 。"Nagle算法使用与否在网络流量上差别不大，使用Nagle算法的传输速度更慢"
    禁用方法非常简单。从下列代码也可看出，只需将套接字可选项TCP_NODELAY: 改为1 (真）即可。

4. 一面
英文介绍，问答
项目（25min）
内存对齐，结构体大小，类大小，虚函数实现原理，static等(8min)
反问（8min）
二面
项目（20min）
比赛，校园活动（10min）
反问
三面
offer情况
个人基本情况
反问
总体来说，面试体验极好，都很专业，流程体制很棒，培养方案及其完善，考核方案一流。
如果不是给我随机分配了一个不是太喜欢的岗位，我就去了，就去了，就去了，哎，好可惜

5.字节 后端实习 40min（已挂）

运行时多态与编译时多态

泛型编程

重载，复写，隐藏的区别

编译过程及指令执行过程

动态编译和静态编译的区别


6.作者：大GGGG
链接：https://www.nowcoder.com/discuss/560492?channel=1009&source_id=home_feed
来源：牛客网

九月末面的 一二三面基本隔几天 流程比较快
回馈一下牛客 国庆之前面的了

一面 45min
手写多线程 两个线程循环打印奇偶数
List Set Map集合讲讲
ArrayList和LinkedList区别
线程池参数
如何保证set集合唯一性 重写hashCode equals方法
java类加载 双亲委派模型 类加载五个步骤
垃圾回收判断算法 引用技术 根可达算法
jvm垃圾回收算法
G1回收器讲讲
网络OSI模型和TCP/IP模型 分层 每一层有什么协议 dns处于那一层(应用层）
讲讲tcp三次握手 四次挥手 为什么要三次握手(防止已经失效的报文达到服务端
B数和B+数区别
数据库事务ACID
select poll epoll()区别(为什么老是问我这个？？？
零拷贝技术
负载均衡算法有哪些
hash一致性算法 hash环
分布式相关有了解吗

二面
手写LRU
讲讲hashMap
volatile关键字作用以及场景
mysql主键索引讲讲 索引失效讲讲
多线程状态转换
String c = "xx" + "yy " + a + "zz" + "mm" + b 背后的优化执行过程
Integer i1 = new Integer(40);
Integer i2 = new Integer(40);
Integer i3 = new Integer(0);
i1 + i3 == i2 的结果和处理过程是怎样的
java8中HashMap的实现有哪些变化
try catch finally中各种return场景
表：
f1    |   f2  |
----------------
NULL  |    1
1     |    NULL
select count(f1) from test;
select count(distinct f1, f2) from test; 区别？
user表中有主键，为自增ID
select * from user表中有主键，为自增ID
select * from user order by name limit N offset M 会查询多少行记录？如何优化，不通过增加索引。user order by name limit N offset M 会查询多少行记录？如何优化，不通过增加索引。
如果服务器上出现了大量处于CLOSE_WAIT状态的TCP链接有可能是什么原因

三面
自我介绍
讲讲hashMap
数据库 覆盖索引
数据库相关 那条sql执行高效
设计大量消息推送
7个球 其中一个比较轻 怎么选出最轻的的那个 最少次数
版本更新问题
团队交流问题
还有一些场景题


7.
作者：牛客111031364号
链接：https://www.nowcoder.com/discuss/560030
来源：牛客网

投的比较晚，没有笔试，捞起来直接面试的。
自我介绍

内存模型
在C语言中，内存可分用五个部分：可参考c-内存模型图

1. BSS段（Block Started by Symbol): 用来存放程序中未初始化的全局变量的内存区域。
2. 数据段（data segment): 用来存放程序中已初始化的全局变量的内存区域。
3. 代码段（text segment): 用来存放程序执行代码的内存区域。
4. 堆（heap）：用来存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。当进程调用malloc分配内存时，
   新分配的内存就被动态添加到堆上，当进程调用free释放内存时，会从堆中剔除。
5. 栈（stack）：存放程序中的局部变量（但不包括static声明的变量，static变量放在数据段中）。同时，在函数被调用时，栈用来传递参数和返回值。
   由于栈先进先出特点。所以栈特别方便用来保存/恢复调用现场。


栈溢出
栈是有一定大小的，通常情况下，栈只有2M，不同系统栈的大小可能不同。
那么，什么情况下才会发生栈溢出呢？
最常见的就是递归。每次递归就相当于调用一个函数，函数每次被调用时都会将局部数据（在函数内部定义的变量、参数、数组、对象等）放入栈中。
递归1000次，就会将1000份这样的数据放入栈中。这些数据占用的内存直到整个递归结束才会被释放，在递归过程中只会累加，不会释放。
如果递归次数过多，并且局部数据也多，那么会使用大量的栈内存，很容易就导致栈溢出了。
在函数内部定义超大数组也会导致栈溢出，例如定义一个 1024 * 1024 的 int 类型的二维数组，就需要 4M 的内存
总结
栈容易溢出是因为栈内存有限，一般就几兆


缓冲区溢出
由于C/C++语言没有数组越界检查机制，当向局部数组缓冲区里写入的数据超过为其分配的大小时，就会发生缓冲区溢出


堆溢出，如何解决




在linux中，堆区的内存申请，在32位系统中，理论上：2^32=4G，但如上面的内存分布图可知：内核占用1G空间。
如上所知，理论上，使用malloc最大能够申请空间大约3G。但这是理论值，因为实际中，还会包含代码区，全局变量区和栈区
X64 CPU 已经限制了虚拟地址中可用的比特数为 48 位，此内核虚拟地址范围总计为 256 TB, Windows 做出了进一步的限制，将其削减为 44 位。
因而，能够存储这类数据结构的虚拟地址跨度被限制为 2^44 ，换言之，当前 64 位 Windows 的系统（内核）虚拟地址空间被限制为 8TB


多态如何实现的

线程通信有几种
互斥锁    条件变量   信号量   


同步通信、     异步通信


进程通信有几种
常见的通信方式有以下几种：
管道pipe
有名管道FIFO
消息队列MessageQueue
共享内存
信号量Semaphore pv操作  (生产者， 消费者)；
信号Signal
套接字Socket


了解过哪些锁
手撕代码：递归实现数字逆序
冒泡排序
冒泡排序优化内循环
冒泡排序优化外循环
算法思想：天平⚖️称重，最优方案
数字推理
前面回答的还行，代码优化部分写的不好，直接凉了


======================================================================================
2020-11-10-
作者：五彩青蛙鱼
链接：https://www.nowcoder.com/discuss/561619?channel=1009&source_id=home_feed
来源：牛客网

3.tcp断开连接的步骤 面试官说说的太大 每一步都应有明确的步骤 比如第一次客户端向服务端发送请求想要说的是“数据已经发送完了” 我说的是客户端发送一个SYN=1 ACK=1的想要断开连接的请求
结合已有总结如下：
首先客户端发送一个连接释放报文，FIN=1（我的数据发送完了）
返回一个确认报文，tcp连接处于半关闭状态，B能向A发送数据但A不能向B发送数据
不再需要连接时，发送连接释放报文，FIN=1
A收到后发送确认，进入TIME_WAIT状态，等待2msl释放连接
B收到A确认后释放报文

4.手撕1. 二叉树层序遍历未判空 运行时报空指针异常 通过0

5.手撕2. 利用快排思想寻找第K大 AC 面试官在此处引导很多 如何优化 无非是省时间或空间 通过比较减少交换次数 最终引导出根据K可剪枝一些不必要的排序（递归过程）

6.滑动窗口何时变化 我回答的是接收端来不及接收时会变小 防止分组丢失 面试官文还有其他什么情况？


作者：betterpig
链接：https://www.nowcoder.com/discuss/561306?channel=1009&source_id=home_feed
来源：牛客网

1. 为什么服务器程序要用主线程做io，这样不是限制了主线程完成其他就绪事件的速度吗
2. Mutable和volatile关键字（没答上来...）
3. 虚函数及其实现
4. Map  multi_map  unordered_map的区别
5. 红黑树和AVL树的区别，为什么不用AVL树
6. 给定一个无序数组，要求打乱它们的顺序，使得每个元素在每个位置的概率相等-->洗牌算法


作者：betterpig
链接：https://www.nowcoder.com/discuss/561303?channel=1009&source_id=home_feed
来源：牛客网

Const关键字的用法

什么时候会有内存泄漏
智能指针
虚表
右值引用
哈希冲突的解决方法，具体说一下怎么实现
红黑树和平衡二叉树有什么区别
如何构造无向连通图的最小生成树（不会）
堆排序有了解吗
归并排序的时间复杂度
无向连通图的广度优先搜索是怎么做的
进程间的通讯方式有哪些
Tcp连接的建立
介绍项目中的分包和解包（项目中没用到）
逻辑题：某年有 53个星期三，下一个元旦可能是星期几
我答的是除了星期三的其他星期几都有可能，后面推了一下应该是星期四，星期五（366天）。
16. 场景题：一个文件有很多行，每一行都是字符串，其中有一些重复的行，怎么剔除这些行
17. 编程实现：写一下shared_ptr这个类的实现，其中该有的数据成员和函数成员，如构造函数、拷贝构造函数、析构函数等
18. 编程实现：最小堆建堆的过程（那时候没有去巩固，写错了）
一面有些问题不会，就挂了。问的算是比较广，对于那时的我来说也有难度。



作者：磨练技能的小小kun
链接：https://www.nowcoder.com/discuss/561964?channel=1009&source_id=home_feed
来源：牛客网

都是自我介绍，讲了讲项目就开始做题了，其中二面问了个网络方面的问题
一道二叉树的序列化与反序列化
一道预测先手胜还是后手胜的动态规划题
两个面试官都很好，还会不断引导，二面一直在引导着我写状态转移方程

10.29 三面
介绍项目，挺细的，然后做题
将两个无序链表合并，并且去除其中重复元素
我用的merge排序后在合并时去除重复元素，面试官最后说如果我说用Set的话他就会让我自己实现一个set，不少人就挂了。然后写几个测试用例就反问环节了

11.10 四面
前半段英文自我介绍，项目，优点等，然后做题
任意M进制转N进制，我就按36进制以内的写了，快写完时他说你这个不符合要求吧，我说可以改为使用更多的字符来表示M进制数，他说要是5万进制呢，
因为我没有见过那么大进制的数不知道怎么表示，但或许尝试用字符串来一一对应M进制里的所有数来做，
然后他说那要是5亿进制呢，你这样能行吗，唉，他语气一直很冲，我说再想想，他说我没时间了，直接结束了，也没有反问。因为他迟到了10分钟，
所以全程也就四十多分钟。体验和前三面真的天上地下，而且一点引导提示也没有，难受😩。另外这题大佬们能给个什么思路吗？



======================================================
2020-11-11

C++编程：n=5x+2y+z，求给定n值下的解的个数，用动态规划来做



语言
指针和引用的区别？
引用是别名，指针是地址, 引用可以看做指针常量
    1.指针可以被重新赋值以指向另一个对象，但是引用则总是在初始化时被指定的对象，以后不能改变.
    2.程序为指针变量分配区域，而不为引用分配内存区域。因为引用生命时必须初始化，从而指向一个已经存在的对象，引用不能为空值
      标准没有规定引用要不要占用内存，也没有规定引用具体要怎么实现，具体随编译器 http://bbs.csdn.net/topics/320095541
      引用类型的变量会占用内存空间，占用的内存空间的大小和指针类型的大小是相同的
    3.从理论上来说，对于指针没有级数限制，但是引用只有一级
    4.不存在指向空值的引用这个事实，意味着使用引用的代码效率比使用指针的要高。因为在使用引用之前不需要测试它的合法性。相反，指针则应该总是被测试，防止其为空
    5. 不能建立引用数组
    6. 不能建立引用的引用，不能建立引用的指针
    7. 指针和引用的自增(++)运算意义不一样
    8. sizeof引用得到的是所指向的变量(对象)的大小，而sizeof指针得到的是指针本身的大小
    9. 如果返回动态内存分配的对象或者内存，必须使用指针，引用可能引起内存泄漏


什么是多态，如何实现的？
静态多态和动态多态？
静态多态：也称为编译期间的多态，编译器在编译期间完成的，编译器根据函数实参的类型(可能会进行隐式类型转换)，可推断出要调用那个函数，
如果有对应的函数就调用该函数，否则出现编译错误。
静态多态有两种实现方式：
    1. 函数重载：包括普通函数的重载和成员函数的重载
       重载函数的关键是函数参数列表——也称函数特征标。包括：函数的参数数目和类型，以及参数的排列顺序。所以，重载函数与返回值，参数名无关
    2. 函数模板的使用
动态多态
    3. 动态多态（动态绑定）：即运行时的多态，在程序执行期间(非编译期)判断所引用对象的实际类型，根据其实际类型调用相应的方法


虚函数的工作方式
什么是动态绑定
虚表指针和虚函数表的存放位置
虚函数表的存放内容
多继承的虚函数表结构
析构函数要设为虚函数吗，为什么
构造函数可以是虚函数吗
拷贝构造函数为什么传引用
什么是纯虚函数
如何在 main 函数之前执行一些操作
static 关键字的使用
静态函数和非静态函数的区别
全局静态遍历和局部静态变量得区别
define 和 const 的区别
new跟malloc的区别
为什么要引入new
free是如何识别free区域的
如何理解面向对象编程
面向对象设计的原则
有哪些强制类型转换，使用的区别
构造函数发生异常会怎么廓
构造函数中this指针暴露了会有什么后果
有哪些智能指针，实现原理和使用区别
如何避免循环依赖
什么是模板，模板特化，偏特化
C++ 11 新特性
左值和右值得区别
inline关键字得使用
计算机网络
OSI 七层模型
三次握手和四次挥手
TCP 报文的头部信息
TCP与UDP的区别
什么是流量控制
什么是拥塞控制
流量控制和拥塞控制的区别
DNS 的查询方式
客户端掉线服务端如何处理
如何解决tcp粘包问题
滑动窗口机制
IP层如何找MAC地址？如果对应IP不在局域网呢
ARP攻击，ARP欺骗
GET 和 POST 的区别
HTTP错误码
浏览器打开一个网页经历了怎样的过程
https连接中的ssl加密过程
数据结构
堆与栈的区别
vector 迭代器失效问题
什么是一致性哈希
vector 内存分配原则，扩容原理
resize、reserve 的区别
二叉搜索树，平衡二叉树，红黑树的区别
B 树和 B+ 树的区别
什么是跳表
什么是哈希表，哈希函数，怎么解决碰撞
如何删除map中的奇数节点
STL中仿函数有什么用，和函数指针有什么不同，哪个效率高
数据库
什么是事务
事务回滚有什么实现机制
MySQL数据库有哪两种引擎？它们之间有什么区别和联系
索引的底层实现原理是什么
查询时命中主键和普通值有什么区别
数据库范式
如何防止数据库被攻击
数据库得ACID
操作系统
进程和线程的区别
线程是否拥有资源，拥有哪些资源
进程间通讯方式
什么是共享内存
多线程要注意哪些问题
什么是协程
select、poll、epoll 的区别
Linux查看文件的磁盘空间，监控进程cpu，内存使用率
ping的底层协议
socket位于哪一层？socket编程的过程
内核分几个部分
同步与互斥的区别
线程同步和互斥方式
什么是内存泄漏，如何检测
什么是虚拟内存
静态库和动态库有什么区别
硬链接软链接的区别
什么是守护进程，如何创建守护进程
算法
反转链表
环形链表
环形链表II
实现strStr()
判断字符串组成是否一致
快速排序的思想和实现
优势洗牌
LRU 缓存
旋转数组的最小数字
10亿个IP，取出频次出现最多的TOP10个IP
前k个高频元素
三数之和
最长公共子序列
二分查找
斐波那契数列
连续子数组得最大和
实现一个 string 类
二叉树的层序遍历
二叉搜索树的后序遍历序列

作者：陈乐乐
链接：https://leetcode-cn.com/circle/discuss/G4fkvH/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。




小鱼易连面试凉经
作者：旧城俨然回眸笑
链接：https://www.nowcoder.com/discuss/562261?channel=1009&source_id=home_feed
来源：牛客网

投的C++岗位
1.笔试倒是不难 有一些C++、操作系统、计算机网络的题
2. 面试
2.1 一面
1>自我介绍
2>介绍自己的项目，针对项目提了一些问题。
3> C语言运行问题
4> 进程与线程，进程通信，线程通信
5> 发了一套题，现场做(选择，简答，编程(实现字符串复制、链表判断是否有环并找到入口点，判断环的大小))
6> 是否愿意做测试(PS:可能觉得我太菜)

2.2 二面
1>自我介绍
2>介绍自己的项目
3>1*1 卷积
4>全连接层
5>参数优化问题
6>职业规划

2.3 三面(PS:以为是三面，实际是测试的二面)
1>介绍自己的项目
2>现在用 ** 的很多,你的跟别人有什么不一样
3>谈谈对数据库的理解，从索引优化角度出发，增删改查什么的就不要说了
4>对计算机网络的认识：ICMP,Ping等
5>数字图像处理：白平衡
6>对http协议的理解
7>静音功能如何测试
8>手撕代码: 开始说写个冒泡，后面说写个快排(PS：快排没写出来)
9>对测试有什么认识
10>从测试角度出发，觉得我们APP有什么需要改进的
最后说，是不是没背代码啊！ 我们测试不缺人，所以想找编程能力强一些的。


作者：eccentive
链接：https://www.nowcoder.com/discuss/562367?channel=1009&source_id=home_feed
来源：牛客网



恐怖的腾讯云一二面。。。 总计接近3个小时40个问题
> 首先说明，本文是作者本人今日在面试腾讯云区域研发公司的总结

## 自我介绍之后面试就开始了，平台是腾讯会议。
####  做题
1. 面试官让我做两道题，第一题编写一个memcpy,第二题编写二叉树的先序遍历(**树的结构面试官给出，调用有一个travseFun 函数指针，进行回调函数的调用**)
写完memcpy,面试官问我内存重叠问题考虑没有(**这儿我没说出来，当时感觉自己要挂了**)面试官直接第二题；
先序遍历简单，递归和迭代两种。

2. 二叉树的递归遍历有什么问题？(**回答可能会导致调用栈过深内存问题**)
3. 二叉树迭代遍历时用到了自定义栈，栈类型的特性，实现？（**回答先进后出，顺序表实现，线性表实现**）
4. C++析构函数为什么要用virtual修饰？（**基类指针动态创建子类对象引发内存泄露问题**）
5. 堆和栈的区别？（**从调用和内存分布两方面**）
6. 进程间通讯方式？（**pipe, fifo, signl, mmap, socket， 并详细说明是否全双工，以及优缺点**）
7. UDP和TCP的区别？（**地球人都知道**）
8. TCP为什么被称为流式传输协议？你怎么定义流？（**从TCP的连接以及断开扯起，再涉及了一下socket 创建中的网络编程知识**）
9. TIME_WAIT为什么是两个MSL时间？（**大致说了一下FIN的丢失，以及端口重用**）
10. 进程和线程的区别？（**结合Linux对其实现分点来说**）
11. 什么是分页错误？（**计算机组成原理学过。。。但是忘了，我就实话实话不太记得**）
12. 数据库范式？（**三大范式，并详细介绍了每个范式**）
13. 数据库索引？（**结合项目来说，用过primary_key, unique, index等**）
14. 树在C++中的应用，红黑树的特性，红黑树增删查改的时间复杂度？（**set, map， 红黑树的定义，Log N**）
15. 有没有一种数据结构可以让查找性能为常数？（**哈希表，并详细介绍了STL的哈希表实现**）
16. 数据库为什么不用红黑树用B+树？（**从磁盘说起，到B+树的数据结构优点**）
17. 如果有个联合索引 为(时间，姓名)，现在只查找姓名会不会用到索引？（**最左匹配原则**）
18. 虚拟内存和物理内存的区别，联系？（**中间层，以及linux对虚拟内存的大致实现**）



#### 项目

> 简历中写了两个项目，然而面试官说我简历中没有东西可以看。。。。就问我有没有跟老师做过项目。我说做过一个社区二维码登记系统。

1. 你项目中有无使用加密方法，若使用加密你会用哪种加密办法？（没有使用，若可以使用的话一是简单加密：例如字母a+3，然后解密a-3；还有一种就是MD5或者哈希散列）
2. 二维码有无考虑信息冲突问题？（没有。。。 一脸尴尬）


#### 总结
上面这些大概持续**1个小时45分钟**感觉面试官还要问很多问题，但是由于我电脑没电关机了。。。  之后我感觉用手机进入会议，面试官说今天面试就到这儿了，也没问我什么问题，也没说准备后续面试，我以为就这样凉了。

结果回到宿舍就受到了二面通知，加油叭加油叭~




> 今天11:40等到了面试，简单自我介绍之后开始面试

#### 问题

1. 面试官给10进制转换为2进制题目，在线手撕代码
2. 负数在计算机中的表示，如何转换？（**补码，反码等**）
3. select和epoll区别？（**文件描述符限制，采用的数据结构**）
4. select和epoll对于用户态和内核态消耗的不同？（**select基于用户态，epoll 红黑树基于内核态等**）
5. 介绍下如何判断一个socket可读？（**一脸懵逼，说了收到数据，收到FIN，收到SYN等， 结果面试官问我SYN会让socket可读吗？ 懵逼**）
6. epoll如何实现多路复用？（**从epoll_create， epoll_ctl, epoll_wait三个函数讲起，并详细说明包括红黑树事件注册，双向链表活跃事件添加等**）
7. epoll为什么用红黑树和list？（**对比select， 使用红黑树可以让时间复杂度达到log n， 链表的话增删操作更方便，没有数目限制等**）
8. epoll的两种触发方式？（**ET，LT，并详细说明了两者的应用场景**）
9. 哈希表和list有什么区别？（**结合STL对两者实现来说**）
10. 红黑树在STL 中有什么应用？（**set, map，并详细说明了红黑树的数据结构**）
11. STL如何实现哈希表？（**从哈希方法，到哈希冲突解决，到哈希表扩容，以及为什么要用质数**）

#### 项目

> 简单说了一下我做的一个网站，并说用到了mysql等

1. 看你项目中用到了测试工具，你如何进行测试？（**从内存泄露工具valgrind, 到tcpdump, tcpcopy, wireshark说起**）
2. 如果一个TCP连接出现问题，你如何进行排除？（**从nginx和apache使用经验说起，排查配置文件，排查网络状况，排查网卡，DNS，系统使用等**）
3. 你都有哪些工具来进行排查？（**内存方面free, vmstat, 进程 top, ps, 网络netstat, ip等命令**）
4. 数据库主从复制介绍一下？（**从为什么要用主从复制，读写分离说起**）
5. 主从辅助如何保证事件的执行？（**简单说了一下mysql对事件的支持，以及原子性，隔离性等四个特性，再说了一下bin-log对其支持**）
6. 如何一个事件中包含四个操作，从服务器执行到第3个操作失败，结果会怎样？（**说实话不是特别清楚，但结合redis对于事务的支持模糊地说了一下**）
7. redis和mysql缓存一致性怎么理解？（**举了一个例子，为什么要有redis做中间层，以及为什么要先改数据库再改缓存中的数据**）
8. redis如何定位数据？（**没回答上来。。。。真的一脸懵逼**）
9. 你家在哪？

#### 总结

> 此次面试没有一面时间长，只有1个小时10分钟，面完之后面试官说会评估面试结果，尽快给答复。

等吧等吧~ 希望可以过~


=================================================================
2020--11-12
作者：The刷
链接：https://www.nowcoder.com/discuss/563162?channel=1009&source_id=home_feed
来源：牛客网

秋招结束，面经回馈牛客（字节、阿里云、英伟达、滴滴等) 精

The刷
编辑于 今天 18:45:14APP内打开赞 20 | 收藏 73 | 回复5 | 浏览1077秋招结束，面经回馈牛客（字节、阿里云、英伟达、滴滴等) 精APP内打开 20 73 5 分享
211渣硕，从某个角度来说感谢疫情带来这么多安静的学习时间，可以让很多普通人也有大把的时间补上基础成功上岸。最终非常幸运的拿到很多offer（阿里，腾讯，百度，滴滴，快手，网易互娱，虾皮，拼多多等）。
这里面包括c/c++开发，后端开发，基础架构，最后去了快手（真香）。

下面简单说一下我个人的学习心得：
首先心态要好，记得复盘。秋招的战线拉得很长， 从去年11月份开始就刷题了，过年假期松懈了一段时间，基本上从三月份才开始恢复学习状态。一般3-6月就是学习时间，这个时间基本没有面试，这段时间要好好打基础，找到自己的长处，深挖一下，可以让自己相对于其他人更有亮点，这也是拿到sp的前提条件。只有6月份有个人公司提前批，vivo，tp-link，其他的基本很少，不过vivo这个可以好好准备一下，一轮技术面就OK了，我因为当时准备的不是很充分，挂了。。不过这也让我后来更有动力来准备了，紧张感也来了。每一次面试记得要录音记录下来，开始可能不太适应有点羞耻哈哈，不过习惯了还好，最重要的当然就是把面试考察的问题记录下来了，最好整理成文本，遇到不会的问题及时的去补充这方面知识。这个过程不仅可以从中找到自己的知识盲区，我觉得另一个很重要的就是你的面试状态，语言表述方式，这些方面我觉得也是挺重要的，毕竟面试就是给面试官留下一个很好的印象，遇到会的大大方法有条理的说出来，遇到不会的，直接说不了解，没有必要闷着，这样会大打折扣的。我觉得其实开发还是挺容易复习的，这个过程跟高考差不多，80%考察的都是基础（俗称八股文），所以基础掌握了，至少普通offer一般跑不了。
下面说一下各个方面的书

C++：
c++ primer★★★★★，这个优先级最高，主要介绍C++语法，迭代器，容器这些的使用。这本书可能对于完全没接触过编程语言的会有些吃力，不过有了C或者java基础应该看起来还好，里面有很多C++11的内容，面试的时候也很有用。
stl源码剖析★★★★，这本书比较老，很多人都说这个书面试频率考察点特别高，就我个人体会而言，只有对vector和map这部分问了问，其他方面问的不多，包括空间配置器我觉得挺重要的，不过基本都没咋问。
深度探索c++对象模型★★★★，这本书关于虚函数，虚函数表，这些内容感觉讲得很好，书也不后，看起来很方便。
effectivec++★★，主要介绍了一些c++比较好的习惯条款，简单过两遍就可以

网络：
tcp/ip协议详解卷一★★★★★，对于主攻网络或者网络考察比较深的公司这个优先级非常高（腾讯，深信服）。TCP协议这块包括各个字段意义，定时器，各种机制要非常熟悉。这本书我也觉得是对TCP这块讲得最细的。
Unix环境网络编程（UNP）★★★，这个学网络编程的要看，腾讯的要看。
计算机网络/自顶向下★★★，这两本随便选一个熟悉网络整个结构，各个层的主要功能，主要协议这些。
网络有很多经典的八股文，例如三次握手啊，四次挥手，timewait,closewait,http协议，https加密，dns，这些一定要牢记啊，频率超级高。

操作系统：
深入理解计算机系统（CSAPP）★★★★★，被誉为跟金子等重量价值的书，看完这本书对计算机有一个整体的认识，强烈建议。
Unix环境高级编程（APUE）★★★★★，一般linuxC/C++网络编程这个几乎是必备的，也是想冲腾讯的，好好看。

数据库：
这方便我就看了看网上整理的资料，基本不会什么，也吃很多亏，有精力的同学建议还是准备一下，虽然比重不高，但是大多面试还是会问到，索引，事务，锁这些东西，说不了解也很尴尬的，毕竟也是计算机基础。

算法：
这个我觉得这个是重中之重了，尤其想冲ssp的大佬们，基本都是算法无敌，我也是这方面比较弱，力扣就刷了300个题。力扣原题的概率非常大，可以说面试中80%的算法题都是这里面的。建议早刷多刷，我到5月后期基本不刷题了，7 8 月份冲刺的时候也在补边角知识，没那么多时间刷题了，所以算法水平下降了，建议每天都刷几个保持状态，在面字节或者快手这种非常重视算法的公司之前，好好准备一下，非常有机会压中原题。牛客有帖子统计过互联网公司的真题，感兴趣的同学找一下。
剑指offer★★★★★★，不说了，都是原题，刷3遍起。

简历方面：
这部分建议突出重点，个人技术栈不要拉得过长，至多三行，如下
掌握xxx
熟悉xxx
了解xxx
项目经历和实习经历要好好写一下，写清楚项目功能是什么，个人扮演什么角色，达成了什么效果，最好能量化。例如提升了20%的效率。QPS提升了多少。整体上一页就够，不要超过一页，跟岗位无关的不要写，例如学生干部之类的，感觉这也只会显得自己没有技术。。简洁就好。
最后第一次在牛客发长文，不足之处敬请谅解，个人也是在这个平台收益了很多，非常感谢牛客，欢迎大家交流。文章末尾放上个人的所有面经。

6.10 提前批vivo一面
1、        项目主要介绍ip存储

2、        设计题：几十G ip怎么存。。。

3、        写一个翻转字符串

4、        求Y型链表的交点  有没有更快的算法

5、        设计题：多线程并发 生产者消费者问题

6、        设计模式中的单例模式？

7、 Hashmap底层实现

8、 Timewait什么时候产生，有什么作用

9、        设计题：大文件统计单词频率

10、 Gdb多线程调试

11、      程序死掉了 没有core文件怎么查















7.7 招银网络一面
1、malloc和new区别

2、进程和线程的区别

3、IPC

4、线程的同步和互斥

5、TCP和UDP，如果UDP想可靠怎么做

6、GET和POST

7、讲一下红黑树的特点

8、常用的排序算法有哪些， 哪些是稳定，哪些是不稳定

9、后缀表达式复原

10、智能指针介绍一下

11、虚函数说一下














7.12 字节一面
1、聊一聊从一层到五层

2、介绍一下重传机制

3、TCP怎么建立连接

4、TCP挥手过程

5、TIMEWAIT说一下

6、closewait说一下

7、select、poll、epoll

8、epoll为什么用红黑树

9、讲讲HTTPS怎么建立起来的

10、数据库ACID

11、LRU算法，怎么实现

12、快排原理说一下，怎么优化，为什么这么优化

13、算法题：两个有序数组，找到第K个数











7.14 招行总行信息技术部一面
1、自我介绍

2、北京的实习经历，深挖（10多分钟）

3、TCP协议有几层（ ？？？？没听说过这个概念，是TCP/IP协议栈吧？？）

4、TCP超时重传机制，时间是多少

5、RTT是什么

6、TCP的慢启动，拥塞避免

7、epoll模型的优点

8、想做运维还是开发？


















7.14 京东搜索一面
1、先说项目

2、epoll原理说一下

3、项目性能测过吗

4、C++比C多了哪些内容

5、C++多态，虚函数

6、类的成员函数前后const有什么作用

7、static作用（围绕这个问了很多）

8、const作用

9、C++的堆和栈区别

10、C语言中的volatile

11、线程同步的方式

12、进程通信的方式

13、线程和进程的区别

14、指针和引用的区别

15、i++和++i区别








7.15 远景智能SP一面
1、自我介绍

2、局域网两台主机怎么跨路由访问192.168.1.1 ------192.168.100.1

3、ARP深挖原理，字段

4、TCP包的内容以及大小

5、数据包头有什么，多大

6、IP包详细讲

7、为什么划分子网

8、socket api详细说Bind绑定哪些信息，可以不bind吗？

9、accept是阻塞还是非阻塞，有什么区别，怎么设置

10、端口只有65536个，那么连接只能建立这么多吗

11、一个连接大概消耗服务器多少内存

12、TCP哪些情况会超时

13、套接字属性怎么改

14、阻塞IO、非阻塞IO，怎么设置呢，其他IO模型

15、epoll的触发方式，除了epoll还有哪些，有什么区别








7.16 京东搜索二面
1、自我介绍

2、算法题

写一个程序，在一个100万的有序数组中，判断是否存在两个数的和等于key。

bool  find_sum_key(int [] arr,  int len,  int  key);

3、linux进程内存空间布局

4、堆和栈的区别

5、构造函数能不能是虚函数

6、基类的析构函数为什么是虚函数

7、引用和指针的区别

8、代码哪些情况会产生coredump

9、TCP断开连接为什么多一次

10、timewait怎么产生

11、查看网络连接命令，如果大量timewait是什么原因

说明关闭了很多连接？

12、线程和进程的区别









7.17 招银网络二面
1、自我介绍

2、平台大量timewait什么原因，timewait最长多久

3、大量SYN半连接，怎么预防？

4、socket 的写服务端建立连接的步骤？

5、虚函数怎么实现的？

6、对象，成员，父类成员 构造，析构顺序？

7、STL  map的底层实现？

8、应用层协议都有哪些？

9、https 证书机制

10、国密算法 椭圆？

11、char  buf[10]; delete[] buf;  delete  buf; 有什么区别？

12、写一个单生产者单消费者，的一个环形队列

13、想做哪一块工作













7.18 深信服SP一面
1、自我介绍

2、手撕代码 归并排序

3、归并排序和快速排序的特点，以及使用场景，如果近似有序用什么

4、数据流每次调用函数返回一个数，使他们有序

5、LRU怎么实现的




















7.18 深信服SP二面
1、项目介绍

2、读过什么书，看过什么源码（说了STL源码剖析），问了vector push_back实现

3、反转链表

4、struct A { char a; int b;} 和 struct A { int b; char a; } 32位下sizeof多大

5、较长字符串求子串

6、IP层的协议，应用场景





















7.20 shopee一面
1、项目介绍，AC自动机复杂度，怎么优化，LRU,EPOLL

2、timewait closewait

3、服务器大量closewait 客户端只有少量连接怎么回事

4、raii机制

5、new和malloc，malloc底层原理

6、共享内存介绍一下

7、进程内存分布，每个区都存什么内容

8、GDB调试

9、函数怎么运行的

10、数据库索引有哪些

11、hash索引扩容？冲突处理

12、同步和异步，阻塞和非阻塞

13、二叉树找第K大的数










7.20 百度一面
1、项目介绍

2、TCP三次握手，怎么优化

3、epoll对比select poll 的优点，是同步还是异步

4、LRU算法，劣势是什么，怎么弥补 （答了LFU）

5、LFU怎么设计

6、阻塞和非阻塞

7、c++11特性知道哪些，智能指针的原理，右值引用的作用

8、malloc和new,free和delete

9、malloc底层原理

10、怎么在一个端口绑定多个进程

11、用过什么排序，堆排序讲一讲

12、GDB一般用哪些

13、一个大数据量日志文件，内存有限，怎么找到访问频率最高的100个IP

14、用过什么锁，自旋锁和互斥锁的区别，使用场景

15、无锁编程









7.21 百度二面
1、项目介绍，LRU，为什么用hash,hash缺点，怎么实现的hash表

2、排序算法有哪些，快排和归并分析区别，场景

3、熟悉哪些树，怎么存

4、项目介绍继续























7.23 百度三面（百度APP技术中台研发部）
1、项目介绍

2、作为组长需要关注哪些事情，从中做了哪些工作

3、项目中遇到压力最大的事，怎么解决的

4、项目中的问题，事后总结了吗

5、除了通宵修改，还有其他方案吗

6、本科的四年时间怎么分配的

7、为啥对JAVA不感兴趣

8、优势和缺点，针对不足怎么改进

9、最近半年系统学过什么，学习途径，看过什么书

10、linux文件系统简述一下

11、常用的linux命令

12、用C语言单向链表实现一个栈的pop 和 push

13、TCP和UDP区别，应用场景

14、如果入职公司三个月，领导分配一个完全新的任务，怎么完成

15、对于工作选择有什么规划

16、工作地点意向









7.28 阿里云（网络产品团队）一面
1、项目介绍（深挖）

2、epoll和poll区别，epoll底层实现，什么情况poll会更快

3、继续项目和实习经历

4、快排原理，最坏情况是什么样

5、访问百度完整流程





















7.31 阿里云二面
1、项目介绍

2、epoll select poll

3、阻塞 非阻塞

4、LRU

5、IPC,线程同步方式

6、两个进程通信，收到一个包，怎么区分具体是打给哪个进程

7、网卡收到包的内核实现

8、线程池的作用

9、排查问题用到哪些命令，工具
















7.31 shopee二面
1、项目介绍（深挖）

2、用户态和内核态，怎么切换

3、虚拟内存、页表、页面置换算法

4、IP转发的过程

5、接下来问了十多个生活问题




















8.3 阿里云三面
1、毕设+项目介绍 十分钟就完事了。。。

























8.3 OPPO一面
1、自我介绍

2、map和hashmap

3、手写hashmap的find和insert

4、项目中怎么设计针对某条流，流量过大

5、对加班怎么看

6、如果组员任务没完成，明天deadline，怎么办




















8.4 远景智能二面
1、自我介绍，项目难点（详细说了radix tree）

2、对编程语言的倾向（主要做JAVA）

3、手撕代码

Vector<int> nums{1,2,3,4,5}

Int k = 4;

Int x = 3;

输出2 3 4 5

给定有序数组，找到最接近x的k个数

4、老家哪？愿意来上海吗
















8.4 英伟达一面
1、看程序说结果

一个基类，一个派生类，实例一个派生类对象。考察构造和析构顺序

2、关于虚函数的考察，也是看程序，运行时多态

3、override

4、智能指针和原生指针的区别，实现原理，vector容器里可以放unique_ptr吗为什么

5、四种类型转换，区别，还是看程序，需要用哪种转换，为什么

6、c++11 特性 move auto

7、#ifdef 的作用 (主要为了防止重定义)

8、TCP三次握手，socket编程介绍

9、高并发下的epoll模型

10、五中IO模型，非阻塞和阻塞，非阻塞式异步模型吗，非阻塞读到什么情况结束

11、epoll底层原理

12、页表，TLB，MMU

13、项目

14、线程池的作用，线程数量怎么确定








8.4 腾讯CDG（FIT）一面
1、c++多态怎么理解，虚函数表有深入了解吗

2、c++ this

3、深拷贝和浅拷贝，默认的拷贝构造函数是深拷贝还是浅拷贝

4、C++使用new一个对象，可不可以用malloc（其实就是考察区别）

5、c++引用用在什么时候

https://blog.csdn.net/msyyxwf/article/details/92969556

6、const在*的左右侧区别

7、static作用

8、vector底层原理，reserve和resize区别，erase中间元素会发生什么

9、map、红黑树

10、C++析构函数和析构函数可以为虚函数吗

11、进程通信方式

12、socket编程过程

13、select和epoll

14、数据库了解吗？（了解不深。。）什么是事务

15、聚簇索引和非聚簇索引

16、隔离级别，什么情况幻读，哪种隔离级别可以避免幻读

17、快速排序原理




8.5 网易互娱SP（基础架构）一面
1、项目介绍

2、close wait，为什么要有这个状态

3、客户端断开连接的TCP状态机，timewait作用，如果没有timewait怎么样

4、LRU设计，为什么

5、多进程和多线程区别，为什么用多线程，缺点

6、线程的私有和共有，文件句柄共享吗，信号处理函数共享吗，收到一个信号多线程怎么处理。

7、陷入内核态的方式有哪些，举例说明

8、malloc是通过什么方式进入内核

通过brk和mmap这两个系统调用

9、异常了解吗，分配内存的过程，是物理内存吗，会产生什么异常

10、#ifdef作用

11、define和static inline区别

12、C语言用过哪些attribute，#pragma pack(n)和__attribute__ ((packed))区别

13、大端小端，写个程序验证一下

14、访问一个163.com经过的过程,详细说，NAT在哪里设置

15、iptables了解吗

16、免费ARP

17、事务是什么

18、隔离级别

19、索引，索引实现方式，区别

20、写一个二分查找，补充，数据可能重复，要找到第二个目标值

8.5字节跳动DATA数据一面
1、TCP和UDP区别

2、因为是数据，对数据库要求比较高，问了数据库，不会。。

3、算法：检验字符串是否是合法IP

总结：不合适。。不知道为啥捞我，很迷





















8.5快手（基础架构CDN相关）一面
1、自我介绍，突出特点（感觉是个四十多岁大佬，经常打断我，只想听重点）

2、举例佐证自己的那些特点

3、两个项目都深挖，问到了SNI的作用（没说好，大佬牛逼）

给我讲证书是跟SNI绑定的，而不是IP，所以需要SNI。

4、算法题：用两个栈，实现一个队列

5、期望工作地点，目前的找工作进度



















8.6腾讯CDG二面
1、const作用

https://www.cnblogs.com/readlearn/p/10806546.html

2、this指针

3、指针和引用的区别

4、main函数执行前有哪些流程，操作系统运行一个程序的流程

https://blog.csdn.net/junbopengpeng/article/details/14143995

5、extern C

6、空类包含哪些函数

7、构造函数可以是虚函数吗

8、析构函数可以抛异常吗

9、new和malloc

10、sort支持哪些容器，用的什么排序算法

Vector deque string array 这些支持随机迭代器的可以

11、linux fork有几个返回值，底层实现

https://www.cnblogs.com/tp-16b/p/9005079.html#_label2

12、线程和进程的区别

13、IPC，最快的方式是什么，共享内存的实现原理

14、共享内存加锁怎么加，还有其他方式吗

锁放在共享内存里

15、文件锁了解吗

16、信号量的原理

17、linux文件系统，linux内核怎么读出文件的内容呢，怎么找到inode

18、read的返回值

19、TCP怎么做到可靠的

20、TCP状态机，timewait

21、select和epoll，最重要的区别

22、TCP长连接，突然拔掉网线会怎么样，如果传输数据呢

23、什么是事务

24、ACID，原子性怎么做到的

25、隔离级别，为什么要隔离，不同隔离级别会产生哪些问题

26、快速排序

27、链表有环 思路

28、map底层，红黑树，优点，应用场景，和B+树的区别


















8.6 OPPO二面
1、项目介绍

2、static。

3、内联函数可以递归吗

4、TCP标志位有哪些，紧急指针可以携带数据吗





















8.6 腾讯CDG三面
1、项目介绍

2、socket耗尽了怎么办

使用端口快速回收

3、端口快速回收怎么做

net.ipv4.tcp_tw_recycle = 1

4、select和epoll

5、epoll触发模式，ET如果buf是1M，但是缓冲区有10M怎么处理

6、read被信号中断怎么处理

linux下read被信号中断后，中断处理返回后，read可能的操作有两种情况：

1,read停止读取行为，返回读取数，继续下一条指令的执行。

2，read被重启，即继续执行read操作。

linux有个变量用来对这两种行为操作的选择。即SA_RESTART参数。

7、c++多态父类指针指向子类，会调用子类虚函数，从内存模型解释一下

8、虚指针初始化在哪

9、进程和线程怎么理解

10、IPC

11、多进程共享内存怎么同步

12、如果把很大内存，拆成一行一行数据库表一样的记录，想对记录互斥，用什么机制

13、共享内存和文件锁怎么建立映射关系

14、HTTP和HTTPS区别，加密过程

15、TCP和UDP怎么理解

16、TCP面向连接是什么意思，为什么需要三次握手

17、在map中删除数据，怎么防止迭代器++ --失效

18、隔离级别

19、聚簇索引

























8.11 字节跳动网络架构一面
1、访问toutiao.com发生什么

2、localdns查toutiao.com递归查询的过程，发出什么类型请求，查询什么信息，拿到信息以后去哪查

3、递归查询和迭代查询的区别，客户端可以控制哪种查询类型吗，DNS协议中的控制这个的标志位知道吗

4、ARP是多播、单播、还是广播？由谁发起，由谁响应

5、服务端收到fin回ack处于什么状态，发起fin方处于什么状态

6、客户端怎么验证证书信任，通过什么机制，多级签发商怎么验证，证书链知道吗

7、HTTP请求分为几个部分，header中0.9到1.0的多了标识一个端口可以识别多个域名是哪个字段

8、TLS怎么实现一个端口服务多个域名

9、HTTP2特点，server push过程，知道push promise吗，怎么知道服务端推送的内容是我需要的或者说怎么判断我要请求的内容，服务端是否已经推给我了

10、CSS选择器怎么匹配到DOM树中的节点并生效，前端了解多少？

11、网卡收到一个tcp包后，怎么传递到应用层并处理，怎么通知内核处理，内核做哪些处理

12、这个包怎么进的内存，内核针对解header需求，涉及到一个缓冲的数据结构了解吗

13、虚拟内存和物理内存映射机制，页表存在哪

14、MMU、缺页中断机制

15、项目介绍

16、怎么看close wait数量、ss命令

17、epoll和select改进点

18、dpdk，xdp

19、虚函数表怎么实现，举例子说明什么应用场景用虚函数

20、算法

如何实现一个数组的原地旋转?(不允许显式地新申请变量, 只能使用swap进行)


(旋转指将12345向左旋转一位后, 变成23451)

函数原型:

def rotate(direction, distance, original_array):


示例调用:

rotate('L', 3, [1,2,3,4,5,6,7,8,9])






















8.11 阿里云交叉面
1、简历问题，保研还是考研，本硕成绩怎么样，本科项目经历，研究生项目经历

2、项目挑战目标，QPS多少，定制内核

3、radix tree和TLS和字典树介绍一下，如果匹配*.github.com怎么做

4、科研经历，目前在做什么，最近半年做什么

5、研究生以来进步最大的地方，代码量有多少，将来想做什么方向的工作

6、实习做什么

7、哪个项目收获最大，如果自己做这个项目能做到什么程度

8、项目中最大的教训，为什么不用C++写，如果用智能指针能解决内存问题吗

9、手撕代码：括号匹配















8.13网易互娱SP（基础架构）二面
1、实习经历，遇到什么问题，怎么解决的

2、项目中的挑战，亮点是什么

3、服务器大量closewait会怎么样，怎么解决，有什么后果

4、线程池的线程怎么工作的，线程数量怎么设，CPU密集型为什么N+1,N+2,N+N不行吗？线程上下文切换开销有哪些，数据栈怎么保存？

5、五种IO模型，以及应用场景，信号驱动IO怎么工作，是一个线程池专门来处理信号吗？这样处理有什么问题？

6、为什么投网易啊，想做什么样的工作

7、面试官介绍自己的部门和小组是网易互娱的云网络，主要提供对梦幻西游、阴阳师、荒野行动这种游戏的高性能私有云服务

8、有啥offer，一定要SP吗，能接受普通offer吗，工作意向


业务部门：负责网易互娱游戏的私有云建设，对网络和操作系统要求高一些













8.17网易雷火一面
1、做题，六个图片，程序改错，看程序说结果，上台阶，数据库判断，IO多路复用判断，SQL语句，

2、TCP、UDP区别

3、TCP可靠性如何保证

4、项目介绍

5、为什么想来做游戏，对游戏开发流程了解吗



















8.17网易雷火二面
1、项目介绍

2、指针和引用的区别

3、智能指针

4、堆和栈，为什么不都用堆或栈呢

5、构造函数和析构函数可以抛异常吗

6、虚函数可以内联吗

7、虚函数机制

8、TCP断开连接为什么不是三次

9、服务端收到客户端的fin回ack进入什么状态

10、TCP慢启动和快启动（没听过有快启动这概念啊？？？？快重传+快恢复？？）

11、做六个小题，洗牌，堆调整，杀怪，看程序写结果，IO复用选择题，数据库连接

12、项目的模块延时

13、平时通过什么方式学习

14、为什么想投游戏，玩什么游戏










8.17shopee一面
1、自我介绍

2、HTTP2.0新特性

3、https加密过程

4、TCP可靠性

5、socket编程过程

6、客户端connect成功代表什么

7、socket怎么做长连接，keepalive有什么作用

8、可以在一个端口同时绑定TCP和UDP吗

9、理论一个服务器最多支持多少长连接

10、数据库缓存用过吗？

11、协程了解吗

12、一个进程的生命周期（五种状态）

13、僵尸进程，怎么处理

14、软链接和硬链接，如果源文件删掉，这两种会失效吗，会产生什么错误

15、iNode，一个文件有几个iNode

16、linux一个目录下最多有多少个文件限制

17、LRU怎么实现的，复杂度

18、算法：力扣179




8.17快手二面
1、sizeof有关题目

2、算法：力扣151

3、TCP有哪些定时器

4、为什么要有timewait

5、IPC分别介绍一下

6、HTTPS加密过程

7、cookie和session区别

8、epoll讲一下
















8.18拼多多二面
1、项目介绍

2、讲一下字典树和epoll

3、算法：一个数组，至少三个元素，A[0] >= A[1],A[n-1] >= A[n-2] ,找波谷值

4、算法：计算二叉树最大宽度

5、什么是事务，ACID怎么实现的

6、了解哪些排序，快排复杂度，最差什么情况，怎么改进

7、HTTPS加密

8、一个C语言到最终可执行程序，有哪些阶段，作用是什么
















8.20 字节跳动一面（DATA产研）
1、项目介绍

2、算法：链表相加

3、一个端口可以绑定多个进程吗，可以产生多少连接

4、用过mysql和缓存吗

5、inner join，left join

6、epoll和select区别，select扫描是在用户态还是内核态

7、HTTP状态码400，502,504，301,302，304

8、你做后端有什么优势？抗压能力？

9、怎么处理线上问题的

10、怎么抓包，用什么看？

11、项目https加解密怎么做的，对称加密还是非对称加密，证书分发

12、urlencode了解吗，为什么做这个

13、TLS和SSL有什么关系，改进在哪

14、有什么offer

15、timewait和closewait，其他状态机呢

16、写了多少代码，刷了多少题

17、项目的缓存怎么做的，有哪几个模块，怎么做的





8.21快手三面
1、项目和实习

2、算法：接雨水
























8.21shopee二面
1、HTTP报文分为哪几个部分，该怎么解析，怎么区分头部和体部

2、chunk怎么读

3、closewait，怎么解决

4、项目中的难点

5、LRU实现

6、智力题

甲乙两人，A箱子5个球，B箱子7个球，一次只能在其中一个箱子取至少一个球，谁出手后把球取光谁获胜，甲先手有必胜策略吗

如果谁出手把球屈光谁失败，甲先手有必胜策略吗

7、多叉树的祖先怎么求

8、算法：求数组的逆序对

9、逆序对为什么用归并，不用快排













8.24 字节二面
1、项目

2、五层网络及其一些协议

3、网卡收包过程

4、中断类型

5、TCP和UDP区别

6、拥塞控制详细说一下

7、select、poll、epoll区别

8、分页和分段

9、进程、线程、协程

10、算法：最长递增子序列，结果按字典序排列

11、算法：字符串交错 力扣97













8.25 字节三面
1、算法：

10.0.0.1/20,a

10.0.0.1/21,b

10.2.3.4/20,c

10.5.6.4/24,d

根据ip查询所在地区

输入10.0.0.1 输出a

2、算法

对用户访问API在连续一小时内不能超过5W次

补充说明：多用户，多API

3、项目

4、PC端微信登录怎么做













8.30 滴滴一面（网约车供需策略，基础方向）
1、c++多态

2、epoll

3、epoll的触发模式，为什么要有这两种模式，nginx用的哪种模式

4、一个服务器最多有多少个连接，还有什么因素影响

5、http的优缺点，http2了解吗

6、线程池怎么实现的，都需要哪些元素

7、字典树怎么实现的，时空复杂度

8、c++11智能指针，sizeof求shared_ptr等于多少（16）

9、map和unordered_map使用场景，hash扩容原理

10、堆和栈上分配内存哪个快（堆需要加锁）

11、GDB调试

12、closewait

13、通常服务器先关还是客户端先关连接（不考虑长连接，一般是看body长度是否可知吧），如果已经关闭连接再发数据包会怎么样

14、算法：对于字符串abcdASJDN，在最大字符后面加上(max)

输入abcdabcd

输出abcd(max)abcd(max)

15、算法：A->1  B->2 C->3 …….Z->26

AA->27 AB->28 ZY->701



8.30 滴滴二面
1、算法：力扣5：最长回文子串

2、项目，性能，稳定性，监控怎么优化

3、怎么用轻量级的方式验证服务是否可用

4、算法：线程安全的单例模式

5、了解哪些数据库信息

6、ACID

7、传统数据库和OLEP数据库，HIVE实现上有什么区别

8、如果你设计一个分布式系统，需要考虑哪些因素
















8.30 滴滴三面
1、项目

2、TCP头字段

3、算法：LRU

4、算法：线程安全的单例模式

5、算法：力扣33：搜索旋转排序数组

6、怎么衡量你的工作做的怎么样，有一些指标吗

7、项目中速度效率怎么优化的呢


















9.1美团一面（两轮车，摩拜，策略开发组，JAVA）
1、项目深挖

2、https加密过程

3、公钥是在什么时候拿到的

4、五层协议介绍一下

5、UDP需要做什么保证可靠性

6、TCP三次握手

7、HTTP协议是什么，1.0和2.0区别，多路复用具体怎么实现的

8、算法：二叉树的中序遍历

9、算法：快排

10、算法：对于每个元素找到身后大于它的元素，找不到返回-1

输入7 3 8 6 5 8

输出 8 8 -1 8 8 -1

11、vector扩容机制

12、static 和 const可以同时修饰成员函数吗

13、c++分配内存的方法

14、c++面向对象的设计特性

15、LRU是什么，怎么实现

16、线程池怎么实现的

17、项目，radix tree和字典树，TLS握手协议，closewait，数据库

18、UDP的好处

19、了解现在一些最新的技术吗

20、设计模式


9.1 阿里云五面
1、项目深挖

2、linux怎么解决惊群，如果是你怎么解决

3、IO怎么优化，从TCP/IP协议栈的角度

4、了解高性能转发技术吗，如果是你的项目怎么进行优化满足上线

5、对TCP/IP协议栈有过了解吗

6、了解dpdk,nginx吗，翻过墙吗

========================================
同花顺C++开发一面
作者：C++摸不着头脑
链接：https://www.nowcoder.com/discuss/562732?channel=1009&source_id=home_feed
来源：牛客网

记得不是很好，一个大概吧
1、tcp、ip模型多少层，各层是什么；
2、linux下比较两个文件；
3、查看各个程序运行cpu状态；
4、打开一个文件，并搜索关键字；
6、tcp/ip端口号和MySQL端口号；
7、C++11新特性;；
8、快速排序思想，复杂度，以及那些是不稳定排序；
9、...
还有的忘记了，差不多问了我接近20个问题吧，可能是我太菜了。。