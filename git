代码git路径  http://192.168.0.7/   
git信息: fullname:caimiaomiao  userName:miao     miaomiao.cai@senscape.com.cn  miao1029081208

系统信息: 18.04   64位
http://192.168.0.7/FaceRecognition/Software/FaceRecognitionServer/tree/feature_20190821_multi_gpu
git clone: user: miaomiao.cai@senscape.com.cn  pass:miao1029081208
git clone分支： git clone -b branchA http://admin@192.168.1.101:7070/r/virtualbox_all_versions.git
git log
git查看所有分支: git branch -a
git查看当前分支: git branch 
git查看历史记录: git log
git回退版本: git reset --hard 456dcfaa55823476b30b6b2e5cbbb9c00bbcbf56
git切换分支:checkout -b feature/20200610_refactor_multi_gpu origin/feature/20200610_refactor_multi_gpu  //这应该是新建分支

 3.切换分支
git checkout 分支名


git可视化工具: gitk

查看信息  git status

git add . git add . 将当前目录下修改的所有代码从工作区添加到暂存区 . 代表当前目录 (最好不要用 .) 要一个一个的添加
git commit -m ‘注释’ 将缓存区内容添加到本地仓库
git pull origin master先将远程仓库master中的信息同步到本地仓库master中
git push origin master 将本地版本库推送到远程服务器

撤回修改:
git checkout -- * 是撤销从上次提交之后所做的所有修改
git checkout -- filaname 是撤销从上次提交之后的单个文件的修改

git aliyun  克隆密码：  miao1029081208*    登录密码 好像也是miao1029081208*

git分支 20200610_refactor_multi_gpu

git 查看某个文件修改历史   
第一步: git log --pretty=oneline 文件名 查看文件commit记录       
第二步: git show <git提交版本号> <文件名>  根据commit 查看具体修改

删除文件 
 git rm 文件名   //git rm test.txt

删除文件夹
git  rm  要删除的文件夹  -r -f  
git commit
git push


Git 查看远端仓库地址  git remote -v 

# 1.查看所有分支
> git branch -a
　　
# 2.查看当前使用分支(结果列表中前面标*号的表示当前使用分支)
> git branch
 
# 3.切换分支
> git checkout 分支名


18  Git 查看某次commit的内容
 1.  git show commit_id // commit_id 为提交的id
 2  查看最近n次提交的修改  git log -p -n  
   指定n为1则可以查看最近一次修改的内容

19 git diff  文件  // 查看本地某个文件具体修改

20 git reset  文件名   // git 撤销 add 文件

21 git 新建仓库后 可以直接clone在本地，提交代码时输入用户名 密码就好了   miao1366     miao1029081208

22  git reset --soft HEAD^   撤销一次commit

23  git config --global core.quotepath false    //git 中文文件名乱码

24 git remote -v    //查看远端地址

25 git stash push <file1> <file2> <file3> [file4 ...]  //储藏部分文件
   git stash list     //所有保存的记录列表
  
26 git stash
   git pull
   git stash pop  //冲突时可以git add  文件。这样冲突文件都会保存下来，不会覆盖掉

27 git 强制pull
   1. git fetch --all 
   2. git reset --hard origin/master
   3. git pull

28 git branch -d yourbranch           // 删除本地分支
   git push origin -d yourbranch      // 删除远程分支












































































































































































































































